{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","apiService.js","Components/ImageGallery/Modal/Modal.js","Components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["Searchbar","state","searchText","inputChange","e","currentTarget","name","value","setState","formSabmit","preventDefault","trim","props","onSubmit","toast","info","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","id","webformatURL","onClick","src","alt","defaultProps","API","searchQuery","nomberPage","a","fetch","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","keyDowmModal","code","onClose","onList","clickFoOverlay","target","window","addEventListener","removeEventListener","createPortal","children","ImageGallery","rezSearch","status","showModal","activeImgIndex","loadMore","pageNomber","then","rez","prevState","hits","toggleModal","showImage","data","i","map","String","indexOf","listImgModal","key","images","length","prevProps","prevSearchText","actualSearchText","error","message","catch","scrollTo","top","documentElement","scrollHeight","behavior","color","height","width","largeImageURL","App","autoClose","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a9b693ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { toast } from 'react-toastify';\r\n\r\nclass Searchbar extends Component {\r\n    state = {\r\n        searchText: ''\r\n    };\r\n    inputChange = e => {\r\n      const { name, value } = e.currentTarget;\r\n      this.setState({ [name]: value});\r\n    };\r\n    formSabmit = e => {\r\n        e.preventDefault();\r\n        if (this.state.searchText.trim() === '') {\r\n            toast.info('Введите цель поиска!');\r\n            return;\r\n        }\r\n        this.props.onSubmit(this.state.searchText.trim());\r\n        this.setState({ searchText: '' });\r\n    };\r\n    render() {\r\n        return (\r\n            <header className=\"Searchbar\">\r\n                <form className=\"SearchForm\" onSubmit={ this.formSabmit }>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                  <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n                 <input\r\n                  name=\"searchText\"\r\n                  className=\"SearchForm-input\"\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  autoFocus\r\n                  placeholder=\"Поиск изображений и фотографий\"\r\n                  value={this.state.searchText}\r\n                  onChange={this.inputChange}  \r\n                />\r\n             </form>\r\n            </header>\r\n        );\r\n    };\r\n\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func\r\n};\r\nexport default Searchbar;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem =  ({id , webformatURL , onClick}) => (\r\n            <li  className=\"ImageGalleryItem\">\r\n               <img src={webformatURL} id={id} alt=\"\" className=\"ImageGalleryItem-image\" onClick={onClick}/>\r\n            </li>\r\n);\r\n\r\nImageGalleryItem.defaultProps = {\r\n//    Array: []\r\n };\r\n\r\n ImageGalleryItem.propTypes = {\r\n    // Array: PropTypes.array,\r\n    onClick: PropTypes.func,\r\n};\r\n\r\nexport default ImageGalleryItem;","const BASE_URL = \"https://pixabay.com/api\";\r\nconst KEY = \"21855327-aca65fff95f12487eb72f2b8c\";\r\n\r\nconst API = async function (searchQuery, nomberPage) {\r\n    const response = await fetch(`${BASE_URL}/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${nomberPage}&per_page=12&key=${KEY}`);\r\n    if (response.ok) { return response.json(); }\r\n    return await Promise.reject(new Error(`Нет изображений по запросу '${searchQuery}'`));\r\n}\r\nexport default API;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nclass Modal extends Component {\r\n    // static defaultProps = {\r\n       \r\n    // }\r\n    state = {\r\n    };\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.keyDowmModal);\r\n    };\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.keyDowmModal);\r\n    };\r\n    keyDowmModal = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        }\r\n        if (e.code === 'ArrowLeft') {\r\n            this.props.onList(-1);\r\n        }\r\n        if (e.code === 'ArrowRight') {\r\n            this.props.onList(+1);\r\n        }\r\n    };\r\n    clickFoOverlay = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        }\r\n    };\r\n    render() {\r\n        return createPortal(\r\n            <div className=\"Overlay\" onClick={this.clickFoOverlay}>\r\n                <div className=\"Modal\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>\r\n            ,\r\n            modalRoot\r\n        );\r\n    }\r\n}\r\n\r\n Modal.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func,\r\n    onList: PropTypes.func\r\n};\r\n\r\nexport default Modal;\r\n","import React, { Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem';\r\nimport API from '../../apiService';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Modal from './Modal';\r\n\r\nclass ImageGallery extends Component {\r\n    static defaultProps = {\r\n        searchText: ''\r\n    }\r\n    state = {\r\n        rezSearch: [],\r\n        status: 'idle',\r\n        showModal: false,\r\n        activeImgIndex: null\r\n    };\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const prevSearchText = prevProps.searchText;\r\n        const actualSearchText = this.props.searchText;\r\n        if (prevSearchText !== actualSearchText) {\r\n            this.setState({\r\n                pageNomber: 1,\r\n                status: 'pending'\r\n            });\r\n            API(actualSearchText, this.state.pageNomber)\r\n                .then(rez => {\r\n                    if (rez.hits.length) {\r\n                        this.setState({\r\n                            rezSearch: rez.hits, status: 'resolved'\r\n                        })\r\n                    }\r\n                    else { this.setState({\r\n                        error: { message: `Нет изображений по запросу \"${actualSearchText}\"` }, status: 'rejected'\r\n                        }) }\r\n                })\r\n                .catch(error => this.setState({\r\n                    error, status: 'rejected'\r\n                }));\r\n        }\r\n        const prevPageNomber = prevState.pageNomber;\r\n        const actualPageNomber = this.state.pageNomber;\r\n        if (prevPageNomber !== actualPageNomber) {\r\n            window.scrollTo({\r\n               top: document.documentElement.scrollHeight,\r\n               behavior: 'smooth',\r\n            });\r\n        }\r\n    };\r\n    loadMore = e => {\r\n        e.preventDefault();   \r\n        API(this.props.searchText, this.state.pageNomber + 1)\r\n            .then(rez => this.setState(prevState => ({\r\n               rezSearch: [...prevState.rezSearch, ...rez.hits],\r\n                pageNomber: prevState.pageNomber + 1\r\n                  \r\n            })));\r\n    };\r\n    toggleModal = () => {\r\n        this.setState(({showModal}) => ({\r\n            showModal: !showModal\r\n        }));\r\n    }\r\n    showImage = data => {\r\n        const id = data.target.id;\r\n        const images = this.state.rezSearch;\r\n        const imagesId = images.map(e => String(e.id));\r\n        \r\n        let i = imagesId.indexOf(id);\r\n        this.setState({\r\n            activeImgIndex: i,\r\n        });\r\n        this.toggleModal();\r\n    };\r\n    listImgModal = key => {\r\n        const images = this.state.rezSearch;\r\n        let i = this.state.activeImgIndex;\r\n        i += key;\r\n        if (i < 0) { i = images.length-1; }\r\n        if (i === images.length) { i = 0;}\r\n        this.setState({activeImgIndex: i});\r\n    };\r\n    render() {\r\n        const { rezSearch, status, error, showModal, activeImgIndex } = this.state;\r\n        if (status === \"idle\") {\r\n            return <div></div>;\r\n        }\r\n        if (status === \"pending\") {\r\n            return (\r\n                <div className=\"conteinGallery\">\r\n                    <Loader\r\n                     type=\"ThreeDots\"\r\n                     color=\"#3f51b5\"\r\n                     height={100}\r\n                     width={100}\r\n                    />\r\n                </div>\r\n            );\r\n        }\r\n        if (status === \"rejected\") {\r\n            return (<div className=\"conteinGallery\">\r\n                      <h1>{error.message}</h1>;    \r\n                    </div>);\r\n        }\r\n        if (status === \"resolved\") {\r\n            return (\r\n              <div className=\"conteinGallery\">\r\n                    <ul className=\"ImageGallery\">\r\n                        {rezSearch.map(({ id, webformatURL }) => { return <ImageGalleryItem key={id} webformatURL={webformatURL} id={id} onClick={this.showImage}/>})}\r\n                </ul>\r\n                <button className=\"Button\" onClick={this.loadMore}>Загрузить еще</button>\r\n                    {showModal && <Modal onClose={this.toggleModal} onList={this.listImgModal}><img src={ rezSearch[activeImgIndex].largeImageURL} alt=\"\" /></Modal>}\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    searchText: PropTypes.string,\r\n};\r\n\r\nexport default ImageGallery;","import React, { Component} from 'react';\nimport './App.css';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass App extends Component {\n  state = {\n    searchText: '',\n  };\n  onSubmit = searchText => {\n    this.setState({ searchText });\n  };\n  render() {\n     return (\n      <div className=\"App\">\n         <Searchbar onSubmit={this.onSubmit} />\n         <ToastContainer\n           autoClose={3000}\n           position=\"top-center\"\n          />\n         <ImageGallery searchText={this.state.searchText} />\n      </div>\n  );\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}